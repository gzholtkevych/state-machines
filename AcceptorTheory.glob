DIGEST b5361335497bb94da4ea691d62923035
FStateMachines.AcceptorTheory
R15:41 StateMachines.Preliminaries <> <> lib
R59:80 StateMachines.Concepts <> <> lib
R98:124 StateMachines.MachineTheory <> <> lib
sec 158:171 <> AcceptorTheory
var 185:185 AcceptorTheory m
var 199:199 AcceptorTheory a
R189:195 StateMachines.Concepts <> Machine syndef
R204:211 StateMachines.Concepts <> Acceptor syndef
R213:213 StateMachines.AcceptorTheory <> m:1 var
def 229:232 <> acc0
R246:250 Coq.Unicode.Utf8_core <> ::type_scope:x_'→'_x not
R239:243 StateMachines.Concepts <> state syndef
R245:245 StateMachines.AcceptorTheory <> AcceptorTheory.m var
R265:269 Coq.Unicode.Utf8_core <> ::type_scope:x_'→'_x not
R251:254 Coq.Init.Datatypes <> list ind
R257:261 StateMachines.Concepts <> input syndef
R263:263 StateMachines.AcceptorTheory <> AcceptorTheory.m var
binder 235:235 <> f:3
R279:282 Coq.Unicode.Utf8_core <> ::type_scope:'∀'_x_'..'_x_','_x not
R294:295 Coq.Unicode.Utf8_core <> ::type_scope:'∀'_x_'..'_x_','_x not
R287:291 StateMachines.Concepts <> state syndef
R293:293 StateMachines.AcceptorTheory <> AcceptorTheory.m var
binder 283:283 <> s:4
R302:306 Coq.Unicode.Utf8_core <> ::type_scope:x_'↔'_x not
R296:296 StateMachines.AcceptorTheory <> f:3 var
R300:301 Coq.Lists.List ListNotations ::list_scope:'['_']' not
R298:298 StateMachines.AcceptorTheory <> s:4 var
R307:315 StateMachines.Concepts <> acceptant syndef
R319:319 StateMachines.AcceptorTheory <> s:4 var
R317:317 StateMachines.AcceptorTheory <> AcceptorTheory.a var
def 333:336 <> accT
R350:354 Coq.Unicode.Utf8_core <> ::type_scope:x_'→'_x not
R343:347 StateMachines.Concepts <> state syndef
R349:349 StateMachines.AcceptorTheory <> AcceptorTheory.m var
R369:373 Coq.Unicode.Utf8_core <> ::type_scope:x_'→'_x not
R355:358 Coq.Init.Datatypes <> list ind
R361:365 StateMachines.Concepts <> input syndef
R367:367 StateMachines.AcceptorTheory <> AcceptorTheory.m var
binder 339:339 <> f:5
R383:387 Coq.Unicode.Utf8_core <> ::type_scope:'∀'_x_'..'_x_','_x not
R425:432 Coq.Unicode.Utf8_core <> ::type_scope:'∀'_x_'..'_x_','_x not
R392:396 StateMachines.Concepts <> state syndef
R398:398 StateMachines.AcceptorTheory <> AcceptorTheory.m var
binder 388:388 <> s:6
R411:414 Coq.Init.Datatypes <> list ind
R417:421 StateMachines.Concepts <> input syndef
R423:423 StateMachines.AcceptorTheory <> AcceptorTheory.m var
binder 402:403 <> u':7
R411:414 Coq.Init.Datatypes <> list ind
R417:421 StateMachines.Concepts <> input syndef
R423:423 StateMachines.AcceptorTheory <> AcceptorTheory.m var
binder 405:407 <> u'':8
R448:452 Coq.Unicode.Utf8_core <> ::type_scope:x_'↔'_x not
R433:433 StateMachines.AcceptorTheory <> f:5 var
R440:443 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R438:439 StateMachines.AcceptorTheory <> u':7 var
R444:446 StateMachines.AcceptorTheory <> u'':8 var
R435:435 StateMachines.AcceptorTheory <> s:6 var
R453:453 StateMachines.AcceptorTheory <> f:5 var
R468:470 StateMachines.AcceptorTheory <> u'':8 var
R456:458 StateMachines.Concepts <> run syndef
R460:460 StateMachines.AcceptorTheory <> AcceptorTheory.m var
R462:462 StateMachines.AcceptorTheory <> s:6 var
R464:465 StateMachines.AcceptorTheory <> u':7 var
prf 481:491 <> acceptable0
R495:498 StateMachines.AcceptorTheory <> acc0 def
R501:510 StateMachines.Concepts <> acceptable syndef
R512:512 StateMachines.AcceptorTheory <> AcceptorTheory.a var
R530:533 StateMachines.AcceptorTheory <> acc0 def
prf 571:581 <> acceptableT
R585:588 StateMachines.AcceptorTheory <> accT def
R591:600 StateMachines.Concepts <> acceptable syndef
R602:602 StateMachines.AcceptorTheory <> AcceptorTheory.a var
R622:625 StateMachines.AcceptorTheory <> accT def
R750:753 StateMachines.MachineTheory <> runC thm
R755:755 StateMachines.AcceptorTheory <> AcceptorTheory.m var
R750:753 StateMachines.MachineTheory <> runC thm
R755:755 StateMachines.AcceptorTheory <> AcceptorTheory.m var
R779:788 StateMachines.Concepts ACCEPTOR acceptable def
sec 826:842 AcceptorTheory UniquenessTheorem
var 854:864 AcceptorTheory.UniquenessTheorem acceptable'
R875:879 Coq.Unicode.Utf8_core <> ::type_scope:x_'→'_x not
R868:872 StateMachines.Concepts <> state syndef
R874:874 StateMachines.AcceptorTheory <> AcceptorTheory.m var
R894:898 Coq.Unicode.Utf8_core <> ::type_scope:x_'→'_x not
R880:883 Coq.Init.Datatypes <> list ind
R886:890 StateMachines.Concepts <> input syndef
R892:892 StateMachines.AcceptorTheory <> AcceptorTheory.m var
var 918:919 AcceptorTheory.UniquenessTheorem H0
var 953:954 AcceptorTheory.UniquenessTheorem HT
R923:926 StateMachines.AcceptorTheory <> acc0 def
R928:938 StateMachines.AcceptorTheory <> AcceptorTheory.UniquenessTheorem.acceptable' var
R958:961 StateMachines.AcceptorTheory <> accT def
R963:973 StateMachines.AcceptorTheory <> AcceptorTheory.UniquenessTheorem.acceptable' var
prf 986:1006 <> acceptable_uniqueness
R1010:1014 Coq.Unicode.Utf8_core <> ::type_scope:'∀'_x_'..'_x_','_x not
R1047:1051 Coq.Unicode.Utf8_core <> ::type_scope:'∀'_x_'..'_x_','_x not
R1019:1023 StateMachines.Concepts <> state syndef
R1025:1025 StateMachines.AcceptorTheory <> AcceptorTheory.m var
binder 1015:1015 <> s:12
R1033:1036 Coq.Init.Datatypes <> list ind
R1039:1043 StateMachines.Concepts <> input syndef
R1045:1045 StateMachines.AcceptorTheory <> AcceptorTheory.m var
binder 1029:1029 <> u:13
R1067:1071 Coq.Unicode.Utf8_core <> ::type_scope:x_'↔'_x not
R1052:1062 StateMachines.AcceptorTheory <> AcceptorTheory.UniquenessTheorem.acceptable' var
R1064:1064 StateMachines.AcceptorTheory <> s:12 var
R1066:1066 StateMachines.AcceptorTheory <> u:13 var
R1072:1081 StateMachines.Concepts <> acceptable syndef
R1087:1087 StateMachines.AcceptorTheory <> u:13 var
R1085:1085 StateMachines.AcceptorTheory <> s:12 var
R1083:1083 StateMachines.AcceptorTheory <> AcceptorTheory.a var
R1172:1173 StateMachines.AcceptorTheory <> AcceptorTheory.UniquenessTheorem.H0 var
R1172:1173 StateMachines.AcceptorTheory <> AcceptorTheory.UniquenessTheorem.H0 var
R1201:1203 Coq.Init.Logic <> ::type_scope:x_'='_x not
R1195:1198 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R1192:1192 Coq.Lists.List ListNotations ::list_scope:'['_x_']' not
R1194:1194 Coq.Lists.List ListNotations ::list_scope:'['_x_']' not
R1205:1208 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R1201:1203 Coq.Init.Logic <> ::type_scope:x_'='_x not
R1195:1198 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R1192:1192 Coq.Lists.List ListNotations ::list_scope:'['_x_']' not
R1194:1194 Coq.Lists.List ListNotations ::list_scope:'['_x_']' not
R1205:1208 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R1269:1270 StateMachines.AcceptorTheory <> AcceptorTheory.UniquenessTheorem.HT var
R1274:1274 Coq.Lists.List ListNotations ::list_scope:'['_x_']' not
R1276:1276 Coq.Lists.List ListNotations ::list_scope:'['_x_']' not
R1269:1270 StateMachines.AcceptorTheory <> AcceptorTheory.UniquenessTheorem.HT var
R1274:1274 Coq.Lists.List ListNotations ::list_scope:'['_x_']' not
R1276:1276 Coq.Lists.List ListNotations ::list_scope:'['_x_']' not
R1269:1270 StateMachines.AcceptorTheory <> AcceptorTheory.UniquenessTheorem.HT var
R1274:1274 Coq.Lists.List ListNotations ::list_scope:'['_x_']' not
R1276:1276 Coq.Lists.List ListNotations ::list_scope:'['_x_']' not
R1309:1312 StateMachines.Concepts <> pass syndef
R1314:1314 StateMachines.AcceptorTheory <> AcceptorTheory.m var
R1309:1312 StateMachines.Concepts <> pass syndef
R1314:1314 StateMachines.AcceptorTheory <> AcceptorTheory.m var
R1331:1334 StateMachines.MachineTheory <> run1 thm
R1331:1334 StateMachines.MachineTheory <> run1 thm
R1331:1334 StateMachines.MachineTheory <> run1 thm
R1397:1406 StateMachines.Concepts ACCEPTOR acceptable def
R1449:1465 StateMachines.AcceptorTheory AcceptorTheory.UniquenessTheorem <> sec
R1472:1485 StateMachines.AcceptorTheory AcceptorTheory <> sec
