DIGEST cd40bc84eb9e881839a3ec1e48ecae0e
FStateMachines.Concepts
R15:41 StateMachines.Preliminaries <> <> lib
mod 75:81 <> MACHINE
constr 105:113 MACHINE mkMachine
rec 94:100 MACHINE Machine
proj 117:121 MACHINE input
proj 131:135 MACHINE state
proj 145:148 MACHINE pass
proj 180:193 MACHINE input_fin_cert
R157:161 Coq.Unicode.Utf8_core <> ::type_scope:x_'→'_x not
R152:156 StateMachines.Concepts <> state:3 meth
R167:171 Coq.Unicode.Utf8_core <> ::type_scope:x_'→'_x not
R162:166 StateMachines.Concepts <> input:2 meth
R172:176 StateMachines.Concepts <> state:3 meth
R197:204 StateMachines.Preliminaries <> Finitary class
R206:210 StateMachines.Concepts <> input:2 meth
def 224:226 MACHINE run
R233:239 StateMachines.Concepts MACHINE Machine rec
binder 229:229 <> m:6
R258:262 StateMachines.Concepts MACHINE state proj
R264:264 StateMachines.Concepts <> m:6 var
binder 254:254 <> s:7
R283:286 Coq.Init.Datatypes <> list ind
R289:293 StateMachines.Concepts MACHINE input proj
R295:295 StateMachines.Concepts <> m:6 var
binder 279:279 <> u:8
R308:308 StateMachines.Concepts <> u:8 var
R315:316 Coq.Lists.List ListNotations ::list_scope:'['_']' not
R326:326 StateMachines.Concepts <> s:7 var
R345:348 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R355:357 StateMachines.Concepts <> run:9 def
R362:365 StateMachines.Concepts MACHINE pass proj
R367:367 StateMachines.Concepts <> m:6 var
R369:369 StateMachines.Concepts <> s:7 var
R359:359 StateMachines.Concepts <> m:6 var
R386:392 StateMachines.Concepts MACHINE <> mod
mod 404:411 <> ACCEPTOR
constr 458:467 ACCEPTOR mkAcceptor
rec 424:431 ACCEPTOR Acceptor
proj 471:479 ACCEPTOR acceptant
R438:452 StateMachines.Concepts MACHINE Machine rec
binder 434:434 <> m:11
R498:502 Coq.Unicode.Utf8_core <> ::type_scope:x_'→'_x not
R483:495 StateMachines.Concepts MACHINE state proj
R497:497 StateMachines.Concepts <> m:11 var
def 522:531 ACCEPTOR acceptable
R538:552 StateMachines.Concepts MACHINE Machine rec
binder 534:534 <> m:14
R573:580 StateMachines.Concepts ACCEPTOR Acceptor rec
binder 569:569 <> a:15
R601:613 StateMachines.Concepts MACHINE state proj
R615:615 StateMachines.Concepts <> m:14 var
binder 597:597 <> s:16
R642:646 Coq.Unicode.Utf8_core <> ::type_scope:x_'→'_x not
R620:623 Coq.Init.Datatypes <> list ind
R626:638 StateMachines.Concepts MACHINE input proj
R640:640 StateMachines.Concepts <> m:14 var
binder 659:659 <> u:17
R664:672 StateMachines.Concepts ACCEPTOR acceptant proj
R677:687 StateMachines.Concepts MACHINE run def
R689:689 StateMachines.Concepts <> m:14 var
R691:691 StateMachines.Concepts <> s:16 var
R693:693 StateMachines.Concepts <> u:17 var
R674:674 StateMachines.Concepts <> a:15 var
R701:708 StateMachines.Concepts ACCEPTOR <> mod
mod 720:729 <> TRANSDUCER
constr 786:797 TRANSDUCER mkTransducer
rec 758:767 TRANSDUCER Transducer
proj 801:806 TRANSDUCER output
proj 816:823 TRANSDUCER response
proj 848:862 TRANSDUCER output_fin_cert
R774:780 StateMachines.Concepts MACHINE Machine rec
binder 770:770 <> m:18
R834:838 Coq.Unicode.Utf8_core <> ::type_scope:x_'→'_x not
R827:831 StateMachines.Concepts MACHINE state proj
R833:833 StateMachines.Concepts <> m:18 var
R839:844 StateMachines.Concepts <> output:20 meth
R866:873 StateMachines.Preliminaries <> Finitary class
R875:880 StateMachines.Concepts <> output:20 meth
R890:899 StateMachines.Concepts TRANSDUCER <> mod
syndef 912:918 <> Machine
R923:937 StateMachines.Concepts <> Machine rec
syndef 978:986 <> mkMachine
R991:1007 StateMachines.Concepts <> mkMachine constr
syndef 1044:1048 <> input
R1053:1065 StateMachines.Concepts <> input proj
syndef 1110:1114 <> state
R1119:1131 StateMachines.Concepts <> state proj
syndef 1176:1179 <> pass
R1184:1195 StateMachines.Concepts <> pass proj
syndef 1242:1244 <> run
R1249:1259 StateMachines.Concepts <> run def
syndef 1308:1315 <> Acceptor
R1320:1336 StateMachines.Concepts <> Acceptor rec
syndef 1374:1383 <> mkAcceptor
R1388:1406 StateMachines.Concepts <> mkAcceptor constr
syndef 1440:1448 <> acceptant
R1453:1470 StateMachines.Concepts <> acceptant proj
syndef 1506:1515 <> acceptable
R1520:1538 StateMachines.Concepts <> acceptable def
